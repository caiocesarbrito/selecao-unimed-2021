Candidato: Caio César de Castro Brito

SQLs Respostas referente ao PDF

1) RETORNAR A QUANTIDADE DE CLIENTES EM CADA CIDADE ONDE RESIDEM

SELECT EC.CIDADE, COUNT(*) AS QUANTIDADE
FROM CLIENTE C
LEFT JOIN  ENDERECO_CLIENTE EC
ON C.ID_ENDERECO = EC.ID
GROUP BY EC.CIDADE;



2) RETORNAR OS ENDEREÇOS QUE NÃO POSSUEM CLIENTES CADASTRADOS

SELECT *
FROM  ENDERECO_CLIENTE EC
LEFT JOIN CLIENTE C
ON C.ID_ENDERECO = EC.ID
WHERE C.ID IS NULL



3) RETORNAR OS ENDEREÇOS COMPLETOS DE CLIENTES EM UMA UNICA COLUNA PARA CADA ENDEREÇO 

SELECT C.ID, C.NOME, (EC.LOGRADOURO || ',' || EC.CEP || ','  || EC.NUMERO || ','  || EC.BAIRRO || ','  || EC.CIDADE || ','  || EC.UF) AS ENDERECO_COMPLETO
FROM  CLIENTE C
LEFT JOIN ENDERECO_CLIENTE EC
ON C.ID_ENDERECO = EC.ID;



4) RETORNAR OS CLIENTES QUE NÃO POSSUEM ATENDIMENTO REGISTRADO 

SELECT * FROM CLIENTE
WHERE ID NOT IN (SELECT ID_CLIENTE FROM ATENDIMENTO);



5) RETORNAR O VALOR TOTAL DOS ATENDIMENTOS POR DATA DE ATENDIMENTO

SELECT DATA_ATENDIMENTO, SUM(VALOR) AS VALOR_TOTAL
FROM ATENDIMENTO
GROUP BY DATA_ATENDIMENTO;



6) TRAZER TODOS OS ENDEREÇOS ONDE A CIDADE NÃO SEJA CARUARU

SELECT * FROM ENDERECO_CLIENTE WHERE CIDADE <> 'CARUARU';



7) TRAZER TODOS OS ATENDIMENTOS COM O NÚMERO DO ATENDIMENTO, DATA DO ATENDIMENTO, NOME DO CLIENTE E NOME DO LOCAL DO ATENDIMENTO. 

SELECT A.ID AS NUMERO_ATENDIMENTO, A.DATA_ATENDIMENTO, C.NOME AS CLIENTE, LA.NOME AS LOCAL
FROM ATENDIMENTO A
LEFT JOIN CLIENTE C
ON C.ID = A.ID_CLIENTE
LEFT JOIN LOCAL_ATENDIMENTO LA
ON LA.ID = A.ID_LOCAL;



8) DE 01/01/2016 ATÉ 31/03/2016 LISTE NOME DISTINTOS DOS CLIENTES QUE TIVERAM ATENDIMENTO. 

SELECT C.NOME AS CLIENTE
FROM ATENDIMENTO A
LEFT JOIN CLIENTE C
ON C.ID = A.ID_CLIENTE
WHERE DATA_ATENDIMENTO BETWEEN '01-JAN-16' AND '31-MAR-16'
GROUP BY C.NOME;



9) TRAZER O NOME E QUANTIDADE DE ATENDIMENTOS DE CADA CLIENTE NO PERÍODO DE 01/01/2016 ATÉ 10/10/2016 ORDENADOS PELA QUANTIDADE

SELECT C.NOME AS CLIENTE, COUNT(*) AS ATENDIMENTOS
FROM ATENDIMENTO A
LEFT JOIN CLIENTE C
ON A.ID_CLIENTE = C.ID
WHERE A.DATA_ATENDIMENTO BETWEEN '01-JAN-16' AND '10-OCT-16'
GROUP BY C.NOME
ORDER BY ATENDIMENTOS;



10) TRAZER OS NOMES, DATA DE ATENDIMENTO E QUANTIDADE DOS CLIENTES QUE POSSUEM MAIS DE UM ATENDIMENTO NO MESMO DIA.

SELECT C.NOME AS CLIENTE, ATENDIMENTO_REPETIDO.DATA_ATENDIMENTO, ATENDIMENTO_REPETIDO.QUANTIDADE
FROM (SELECT DATA_ATENDIMENTO, ID_CLIENTE, COUNT(*) AS QUANTIDADE
FROM ATENDIMENTO
GROUP BY DATA_ATENDIMENTO, ID_CLIENTE
ORDER BY DATA_ATENDIMENTO) ATENDIMENTO_REPETIDO
LEFT JOIN CLIENTE C
ON C.ID = ATENDIMENTO_REPETIDO.ID_CLIENTE
WHERE ATENDIMENTO_REPETIDO.QUANTIDADE > 1;



11) TRAZER O NOME E A QUANTIDADE TOTAL DE ATENDIMENTOS POR LOCAL.  

SELECT L.NOME AS LOCAL, COUNT(*) AS QUANTIDADE_ATENDIMENTOS
FROM ATENDIMENTO A
LEFT JOIN LOCAL_ATENDIMENTO L
ON L.ID = A.ID_LOCAL
GROUP BY L.NOME;



12) DE 01/01/2016 ATÉ 31/12/2016 LISTE O CUSTO MÉDIO DOS ATENDIMENTO POR LOCAL DE ATENDIMENTO.

SELECT L.NOME AS LOCAL, AVG(A.VALOR) AS CUSTO_MEDIO
FROM ATENDIMENTO A
LEFT JOIN LOCAL_ATENDIMENTO L
ON L.ID = A.ID_LOCAL
WHERE A.DATA_ATENDIMENTO BETWEEN '01-JAN-16' AND '31-DEC-16'
GROUP BY L.NOME;



13) LISTAR OS PACIENTES QUE FORAM ATENDIDOS EM MAIS DE UM LOCAL ENTRE AS DATAS 01/01/2016 E 10/10/2016, TRAZER NOME, DATA DO ATENDIMENTO, ENDERECO COMPLETO DO LOCAL E O CUSTO POR LOCAL.

SELECT NOME_CLIENTE, ULTIMO_ATENDIMENTO AS DATA_ATENDIMENTO, NOME_LOCAL AS LOCAL, ENDERECO_LOCAL, SOMA AS CUSTO_LOCAL FROM (
SELECT A.ID_CLIENTE, C.NOME AS NOME_CLIENTE, L.NOME AS NOME_LOCAL, A.ID_LOCAL, MAX(A.DATA_ATENDIMENTO) AS ULTIMO_ATENDIMENTO, SUM(A.VALOR) AS SOMA,
(EC.LOGRADOURO || ',' || EC.CEP || ','  || EC.NUMERO || ','  || EC.BAIRRO || ','  || EC.CIDADE || ','  || EC.UF) AS ENDERECO_LOCAL
FROM ATENDIMENTO A
LEFT JOIN CLIENTE C
ON C.ID = A.ID_CLIENTE
LEFT JOIN LOCAL_ATENDIMENTO L
ON L.ID = A.ID_LOCAL
LEFT JOIN ENDERECO_CLIENTE EC
ON EC.ID = L.ID_ENDERECO
WHERE A.DATA_ATENDIMENTO BETWEEN '01-JAN-16' AND '10-OCT-16'
AND A.ID_CLIENTE IN(
    SELECT ID_CLIENTE FROM (
      SELECT ID_LOCAL, ID_CLIENTE
      FROM ATENDIMENTO
      WHERE DATA_ATENDIMENTO BETWEEN '01-JAN-16' AND '10-OCT-16'
      GROUP BY ID_LOCAL, ID_CLIENTE
      ORDER BY ID_CLIENTE, ID_LOCAL
    ) X
    GROUP BY ID_CLIENTE
    HAVING COUNT(*) > 1
) 
GROUP BY A.ID_CLIENTE, A.ID_LOCAL, C.NOME, L.NOME, EC.LOGRADOURO, (EC.LOGRADOURO || ',' || EC.CEP || ','  || EC.NUMERO || ','  || EC.BAIRRO || ','  || EC.CIDADE || ','  || EC.UF)
ORDER BY A.ID_CLIENTE);



14) Trazer todos os atendimentos agrupados por local, com os seguintes campos: - Nome do local de atendimento - Data do Atendimento - Rank | do menor para o maior (se o atendimento for mais recente, será o 1)

SELECT L.NOME AS LOCAL, A.DATA_ATENDIMENTO
FROM ATENDIMENTO A
LEFT JOIN LOCAL_ATENDIMENTO L
ON L.ID = A.ID_LOCAL
ORDER BY A.ID_LOCAL, A.DATA_ATENDIMENTO DESC;



15) Trazer a quantidade de atendimentos, e o grupo de idade que realizou grupos de idade: 0 - 20 21 - 50 51 - 80 81 acima ordenados por grupo ( do menor para o maior )  

SELECT CLIENTE_AGRUPADO.GRUPO_IDADE, COUNT(*) AS QUANTIDADE
FROM ATENDIMENTO A
LEFT JOIN (
    SELECT ID, trunc(to_char(sysdate - DATA_NASCIMENTO)/365.25) AS IDADE,
    CASE 
        WHEN trunc(to_char(sysdate - DATA_NASCIMENTO)/365.25) >= 0 AND trunc(to_char(sysdate - DATA_NASCIMENTO)/365.25) <= 20 
        THEN 'GRUPO 1 (0-20)'
        WHEN trunc(to_char(sysdate - DATA_NASCIMENTO)/365.25) >= 21 AND trunc(to_char(sysdate - DATA_NASCIMENTO)/365.25) <= 50
        THEN 'GRUPO 2 (21-50)' 
        WHEN trunc(to_char(sysdate - DATA_NASCIMENTO)/365.25) >= 51 AND trunc(to_char(sysdate - DATA_NASCIMENTO)/365.25) <= 80
        THEN 'GRUPO 3 (51-80)'
        WHEN trunc(to_char(sysdate - DATA_NASCIMENTO)/365.25) >= 81
        THEN 'GRUPO 4 (81 ACIMA)'
    END GRUPO_IDADE
    FROM cliente c
) CLIENTE_AGRUPADO
ON CLIENTE_AGRUPADO.ID = A.ID_CLIENTE
GROUP BY CLIENTE_AGRUPADO.GRUPO_IDADE
ORDER BY CLIENTE_AGRUPADO.GRUPO_IDADE;
